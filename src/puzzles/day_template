use std::time::Instant;

fn part1(input: &str) -> u32 {
    0
}

fn part2(input: &str) -> u32 {
    0
}

pub fn run() {
    let input = std::fs::read_to_string("inputs/y<YEAR>/d<DAY>.txt").expect("Failed to read input file");
    let part1_start = Instant::now();
    let part1_result = part1(&input);
    let part1_duration = part1_start.elapsed().as_micros();
    let part2_start = Instant::now();
    let part2_result = part2(&input);
    let part2_duration = part2_start.elapsed().as_micros();
    println!("Part 1: {} in {}Î¼s", part1_result, part1_duration);
    println!("Part 2: {} in {}Î¼s", part2_result, part2_duration);
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    // Year 20<YEAR> Day <DAY> Part 1
    fn y<YEAR>d<DAY>p1() {
        let input = "";
        let expected = 0;
        assert_eq!(part1(input), expected);
    }

    #[test]
    // Year 20<YEAR> Day <DAY> Part 2
    fn y<YEAR>d<DAY>p2() {
        let input = "";
        let expected = 0;
        assert_eq!(part2(input), expected);
    }
}
